<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>《图解HTTP》阅读手记（中）</title>
    <link href="/2023/02/21/%E3%80%8A%E5%9B%BE%E8%A7%A3HTTP%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%8B%E8%AE%B0%EF%BC%88%E4%B8%AD%EF%BC%89/"/>
    <url>/2023/02/21/%E3%80%8A%E5%9B%BE%E8%A7%A3HTTP%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%8B%E8%AE%B0%EF%BC%88%E4%B8%AD%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<img src="1.png" style="display: block; margin: auto; width: 200px; margin-bottom: 20px;"><h2 id="第三章-HTTP-报文内的-HTTP-信息"><a href="#第三章-HTTP-报文内的-HTTP-信息" class="headerlink" title="第三章 HTTP 报文内的 HTTP 信息"></a>第三章 HTTP 报文内的 HTTP 信息</h2><p><img src="2.png" alt="HTTP 请求报文和响应报文 "></p><h3 id="一、报文首部（请求报文）"><a href="#一、报文首部（请求报文）" class="headerlink" title="一、报文首部（请求报文）"></a>一、报文首部（请求报文）</h3><h4 id="1-请求行"><a href="#1-请求行" class="headerlink" title="1.请求行"></a>1.请求行</h4><p>包含<mark>用于请求的方法</mark>，<mark>请求 URI </mark>和<mark> HTTP 版本</mark>。</p><p><img src="3.png" alt=" "><br><img src="4.png" alt=" "><br><img src="5.png" alt=" "></p><ul><li>请求方法</li><li>URI（统一资源标识符）<br>URI 用字符串标识某一互联网资源，而 URL（统一资源定位符） 表示资源的地点，可见 URL 是 URI 的子集。</li><li>HTTP 版本</li></ul><h4 id="2、各种首部字段"><a href="#2、各种首部字段" class="headerlink" title="2、各种首部字段"></a>2、各种首部字段</h4><p>首部字段是由首部字段名和字段值构成的，中间用冒号“:” 分隔。</p><ul><li>HOST：指定客户端要访问的域名/请求资源所在服务器（在一个服务器中可能拥有多个 Host 的应用服务，此时仅仅通过 IP 无法访问到对应的服务，可通过 Host 来进行定位。）</li><li>Content-Type：表示报文主体的对象类型（如 text/html）</li><li>Accept：客户端能接受的媒体类型</li><li>Accept-Charset：客户端可接受的字符集（优先处理字符集）</li><li>Accept-Language：客户端可接受的自然语言（优先处理的语言）</li><li>Accept-Encoding ：客户端可接受的编码格式（优先处理的编码格式）</li><li>Referer：请求中 URI 的原始获取方（只看 Referer 就能知道请求的 URI 是从哪个 Web 页面发起的）</li></ul><p>非 HTTP1.1 首部字段</p><ul><li>Cookie：控制客户端的状态（HTTP 是无状态协议）</li><li>Token：</li><li>Connection: keep-alive：持久连接节省通信量</li></ul><p><img src="6.png" alt=" "></p><h3 id="二、报文首部（响应报文）"><a href="#二、报文首部（响应报文）" class="headerlink" title="二、报文首部（响应报文）"></a>二、报文首部（响应报文）</h3><h4 id="1-状态行"><a href="#1-状态行" class="headerlink" title="1.状态行"></a>1.状态行</h4><p>包含表明<mark>响应结果的状态码</mark>，<mark>原因短语</mark>和 <mark>HTTP 版本</mark>。</p><p><img src="7.png" alt=" "></p><ul><li>状态码<br>状态码告知从服务器端返回的请求结果</li></ul>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>http</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>css——持续更新遇到的问题</title>
    <link href="/2023/02/17/css%E2%80%94%E2%80%94%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <url>/2023/02/17/css%E2%80%94%E2%80%94%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h3 id="一、语法"><a href="#一、语法" class="headerlink" title="一、语法"></a>一、语法</h3><h3 id="二、布局"><a href="#二、布局" class="headerlink" title="二、布局"></a>二、布局</h3><h4 id="1、text-align-center-失效"><a href="#1、text-align-center-失效" class="headerlink" title="1、text-align:center 失效"></a>1、text-align:center 失效</h4><ul><li><p><a href="https://www.w3schools.com/css/css_align.asp">w3school 文档</a></p></li><li><p>问题复现：</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-comment">&lt;!-- 目的是让图片居中 --&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;1.png&quot;</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100px&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><p>官方文档解释：text-align: center –&gt; To just center the text inside an element（使文字居中于元素内）</p><p>按照这里的解释该规则是用于外层容器，而不是用于需要居中的元素本身<br>但实际也可以用于需要居中的元素本身，不过需要该元素外层有一个 p 标签</p><ul><li>解决方案：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;text-align: center;&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;1.png&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100px&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>或<br><br><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;1.png&quot;</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;center&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100px&quot;</span> /&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br><br>或<br><br><span class="hljs-comment">&lt;!-- </span><br><span class="hljs-comment">    最后这种方案是官方推荐的使图片居中的方案：</span><br><span class="hljs-comment">    To center an image, set left and right margin to auto and make it into a block element </span><br><span class="hljs-comment">--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;1.png&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;display: block; margin: auto; width: 100px;&quot;</span> /&gt;</span><br></code></pre></td></tr></table></figure><h3 id="三、动画"><a href="#三、动画" class="headerlink" title="三、动画"></a>三、动画</h3><h3 id="四、元素样式"><a href="#四、元素样式" class="headerlink" title="四、元素样式"></a>四、元素样式</h3>]]></content>
    
    
    <categories>
      
      <category>css</category>
      
    </categories>
    
    
    <tags>
      
      <tag>问题记录</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《图解HTTP》阅读手记（上）</title>
    <link href="/2023/02/17/%E3%80%8A%E5%9B%BE%E8%A7%A3HTTP%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%8B%E8%AE%B0%EF%BC%88%E4%B8%8A%EF%BC%89/"/>
    <url>/2023/02/17/%E3%80%8A%E5%9B%BE%E8%A7%A3HTTP%E3%80%8B%E9%98%85%E8%AF%BB%E6%89%8B%E8%AE%B0%EF%BC%88%E4%B8%8A%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<!-- align-center无效的都可以用p标签包裹起来，根本原因就是没有一个撑满宽度的容器，而p标签默认宽度撑满容器 --><img src="1.png" style="display: block; margin: auto; width: 200px; margin-bottom: 20px;"><h3 id="第一章-了解-Web-及网络基础"><a href="#第一章-了解-Web-及网络基础" class="headerlink" title="第一章 了解 Web 及网络基础"></a>第一章 了解 Web 及网络基础</h3><h3 id="1、HTTP（HyperText-Transfer-Protocol，超文本传输协议）"><a href="#1、HTTP（HyperText-Transfer-Protocol，超文本传输协议）" class="headerlink" title="1、HTTP（HyperText Transfer Protocol，超文本传输协议）"></a>1、HTTP（HyperText Transfer Protocol，超文本传输协议）</h3><h4 id="1-1-为了理解-HTTP，我们有必要事先了解一下-TCP-IP-协议族"><a href="#1-1-为了理解-HTTP，我们有必要事先了解一下-TCP-IP-协议族" class="headerlink" title="1.1 为了理解 HTTP，我们有必要事先了解一下 TCP/IP 协议族"></a>1.1 为了理解 HTTP，我们有必要事先了解一下 TCP/IP 协议族</h4><ul><li><p>计算机与网络设备要相互通信，双方就必须基于相同的方法。比如，如何探测到通信目标、由哪一边先发起通信、使用哪种语言进行通信、怎样结束通信等规则都需要事先确定。不同的硬件、操作系统之间的通信，所有的这一切都需要一种规则。<mark>而我们就把这种规则称为协议（protocol）。</mark></p><p><img src="2.png" alt="TCP/IP 是互联网相关的各类协议族的总称"></p></li><li><p><mark>TCP/IP 协议族里重要的一点就是分层。</mark>TCP/IP 协议族按层次分别分为以下 4 层：应用层、传输层、网络层和数据链路层。（每个底层都是为上层提供服务）</p><p><img src="3.png" alt="这种把数据信息包装起来的做法称为封装（encapsulate）"></p></li></ul><h4 id="1-2-各种协议的职责"><a href="#1-2-各种协议的职责" class="headerlink" title="1.2 各种协议的职责"></a>1.2 各种协议的职责</h4><ul><li>HTTP 协议：生成针对目标 Web 服务器的<mark> HTTP 请求报文</mark>（反过来–&gt;对 Web 服务器请求的内容进行处理）</li><li>TCP 协议：为了方便通信，将 HTTP 请求报文分割成报文段（反过来–&gt;重组从对方那里接收的报文段，即按序号以原来的顺序重组请求报文）</li><li>IP 协议：搜索对方的地址，一边中转一边传送</li></ul><h3 id="2、一个经典八股文问题"><a href="#2、一个经典八股文问题" class="headerlink" title="2、一个经典八股文问题"></a>2、一个经典八股文问题</h3><ul><li><p>当我们在网页浏览器（Web browser）的地址栏中输入 URL 时，Web 页面是如何呈现的？（一个数据包在网络中的心路历程）</p></li><li><p>答：用户在浏览器中输入 url 地址，浏览器首先是<mark>解析 URL，生成 HTTP 请求报文</mark>），同时<mark>解析域名得到服务器 ip 地址</mark>）（这里是先从缓存中找是否存在域名，存在就直接取 IP 地址，不存在就借助 <mark>DNS</mark>） 进行查询），然后是 <mark>TCP 三次握手</mark>）建立客户端和服务器的连接，再依次通过网络层和链路层，<mark>发送 HTTP 请求</mark>）获取服务器端的静态资源，服务器处理请求反过来<mark>发送 HTTP 响应报文</mark>）给客户端，客户端获取到页面静态资源，<mark>解析渲染页面</mark>），最后 <mark>TCP 四次挥手</mark>）关闭客户端和服务器的连接。</p><ul><li><p>浏览器做的第一步工作是解析 URL</p><p><img src="4.png" alt=" "></p></li><li><p>对 URL 进行解析之后，浏览器确定了 Web 服务器和文件名，接下来就是根据这些信息来生成 HTTP 请求报文了。</p><p><img src="6.png" alt=" "></p></li><li><p>通过浏览器解析 URL 并生成 HTTP 消息后，需要委托操作系统将消息发送给 Web 服务器。（发送之前，需要通过 DNS 查询域名对应的 IP）</p></li></ul><p><img src="5.png" alt="DNS 域名解析的过程"></p><ul><li><p>可靠传输 —— TCP</p><ul><li>TCP 传输数据之前，要先三次握手建立连接（<mark>三次握手目的是保证双方都有发送和接收的能力，且有效避免历史连接</mark>）</li><li>如果 HTTP 请求消息比较长，超过了 MSS 的长度（可以了解下 TCP 报文），这时 TCP 就需要把 HTTP 的数据拆解一块块的数据发送，而不是一次性发送所有数据。</li><li>这个所谓的「连接」，只是双方计算机里维护一个状态机，在连接建立的过程中，双方的状态变化时序图就像这样</li></ul></li></ul><p><img src="8.png" alt=" "></p><ul><li><p>TCP 模块在执行连接、收发、断开等各阶段操作时，都需要委托 IP 模块将数据封装成网络包发送给通信对象。</p><p>关于 IP：当你的电脑连入互联网后，电脑将会获得一个编号地址，也就是 IP 地址，同理打个比方，bilibili 的服务器接入互联网，也将分配一个 IP 地址，（我们常说的访问某个网站，其实就是在访问这个网站的服务器）</p></li></ul></li></ul><h3 id="3、HTML（（HyperText-Markup-Language，超文本标记语言）"><a href="#3、HTML（（HyperText-Markup-Language，超文本标记语言）" class="headerlink" title="3、HTML（（HyperText Markup Language，超文本标记语言）"></a>3、HTML（（HyperText Markup Language，超文本标记语言）</h3><ul><li><p>超文本是一种文档系统，可将文档中任意位置的信息与其他信息（文本或图片等）建立关联，即超链接文本。</p></li><li><p>标记语言是指通过在文档的某部分穿插特别的字符串标签，用来修饰文档的语言。</p></li><li><p>由 HTML 构成的文档经过浏览器的解析、渲染后，呈现出来的结果就是 Web 页面。</p></li><li><p>HTML5 标准不仅解决了浏览器之间的兼容性问题，并且可把文本作为数据对待，更容易复用，动画等效果也变得更生动。</p></li><li><p>拓展</p><ul><li>CSS 的理念就是让文档的结构和设计分离，达到解耦的目的。</li><li>动态 HTML 技术是通过调用客户端脚本语言 JavaScript，实现对 HTML 的 Web 页面的动态改造。</li><li>DOM 是用以操作 HTML 文档和 XML 文档的 API（Application Programming Interface，应用编程接口）。</li></ul></li></ul><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><blockquote><p><a href="https://blog.csdn.net/qq_34827674/article/details/104909394">当键入网址后，到网页显示，其间发生了什么？</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>http</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>添加Twikoo评论插件</title>
    <link href="/2023/02/16/%E6%B7%BB%E5%8A%A0Twikoo%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/"/>
    <url>/2023/02/16/%E6%B7%BB%E5%8A%A0Twikoo%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>添加评论模块不仅仅是添加一个组件那么简单，简言之就是涉及到与后端的交互，当然如今的网站评论系统已经做得非常成熟了，搭配一台云服务器，即可自动生成。</p><p>通过对比不同的评论系统，发现 twikoo 支持自动拉取 QQ 头像、图文评论、点赞回复、匿名评论等等功能，样式上也简单美观，所以本站选用 twikoo</p><ul><li><a href="https://twikoo.js.org/">Twikoo 文档</a></li></ul><h3 id="腾讯云部署"><a href="#腾讯云部署" class="headerlink" title="腾讯云部署"></a>腾讯云部署</h3><h4 id="1-进入活动专区"><a href="#1-进入活动专区" class="headerlink" title="1.进入活动专区"></a>1.进入活动专区</h4><ul><li><p><a href="https://cloud.tencent.com/act">腾讯云</a> 或 <a href="https://cloud.tencent.com/act/free">云开发 CloudBase</a></p><p><img src="1.png" alt=" "></p></li></ul><h4 id="2-选择云开发"><a href="#2-选择云开发" class="headerlink" title="2.选择云开发"></a>2.选择云开发</h4><p><img src="2.png" alt=" "></p><h4 id="3-进入云开发控制台"><a href="#3-进入云开发控制台" class="headerlink" title="3.进入云开发控制台"></a>3.进入云开发控制台</h4><p><img src="4.png" alt=" "></p><h4 id="4-新建环境"><a href="#4-新建环境" class="headerlink" title="4.新建环境"></a>4.新建环境</h4><ul><li><p>地域最好选择上海，如果选择广州的话，需要在<code>twikoo.init()</code>时额外指定环境 <code>region: &quot;ap-guangzhou&quot;</code></p></li><li><p>环境名称无所谓，符合要求即可</p><p><img src="3.png" alt=" "></p></li></ul><h4 id="5-环境初始化"><a href="#5-环境初始化" class="headerlink" title="5.环境初始化"></a>5.环境初始化</h4><ul><li><p>进入刚刚创建的环境，选择环境–&gt;登录授权，启用“匿名登录”</p></li><li><p>选择环境–&gt;安全配置，将网站域名添加到“WEB 安全域名”</p><p><img src="5.png" alt=" "></p></li><li><p>选择环境–&gt;环境总览，复制环境 ID（用于 fluid 配置）</p></li></ul><h4 id="6-开始手动部署-twikoo"><a href="#6-开始手动部署-twikoo" class="headerlink" title="6.开始手动部署 twikoo"></a>6.开始手动部署 twikoo</h4><ul><li><p><a href="https://twikoo.js.org/quick-start.html#%E6%89%8B%E5%8A%A8%E9%83%A8%E7%BD%B2">Twikoo 部署文档</a></p></li><li><p>选择基础服务–&gt;云函数，新建云函数，按如图所示配置基础信息</p><p><img src="6.png" alt=" "></p><ul><li>下一步，函数配置，将函数代码替换为<code>exports.main = require(&#39;twikoo-func&#39;).main</code></li><li>创建完成后，点击“twikoo”进入云函数详情页，进入“函数代码”标签，点击“文件 - 新建文件”，输入 <code>package.json</code>，回车</li><li>将代码<code>&#123; &quot;dependencies&quot;: &#123; &quot;twikoo-func&quot;: &quot;1.6.10&quot; &#125; &#125;</code>粘贴到代码框中，点击“保存并安装依赖”（注：此处的依赖版本需与官方最新版本保持一致）</li><li>点击测试，将模板替换为请求对象（可保存模板）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">&#123;<br>  <span class="hljs-string">&quot;event&quot;</span>: <span class="hljs-string">&quot;COMMENT_SUBMIT&quot;</span>,<br>  <span class="hljs-string">&quot;accessToken&quot;</span>: <span class="hljs-string">&quot;b45b2e4c9ec943b884eb4cd9c044c4cd&quot;</span>,<br>  <span class="hljs-string">&quot;nick&quot;</span>: <span class="hljs-string">&quot;云景&quot;</span>,<br>  <span class="hljs-string">&quot;mail&quot;</span>: <span class="hljs-string">&quot;2289350377@qq.com&quot;</span>,<br>  <span class="hljs-string">&quot;link&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-string">&quot;ua&quot;</span>: <span class="hljs-string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36&quot;</span>,<br>  <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;/api.html&quot;</span>,<br>  <span class="hljs-string">&quot;href&quot;</span>: <span class="hljs-string">&quot;https://twikoo.js.org/api.html#example-3&quot;</span>,<br>  <span class="hljs-string">&quot;comment&quot;</span>: <span class="hljs-string">&quot;&lt;p&gt;414&lt;/p&gt;\n&quot;</span><br>  &#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="hexo-fluid-配置"><a href="#hexo-fluid-配置" class="headerlink" title="hexo fluid 配置"></a>hexo fluid 配置</h3><p>打开<code>_config.fluid.yml</code> 文件</p><ul><li>开启评论需要在主题配置中开启并指定评论模块：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">post:<br>  comments:<br>    <span class="hljs-built_in">enable</span>: <span class="hljs-literal">true</span><br>    <span class="hljs-built_in">type</span>: twikoo<br></code></pre></td></tr></table></figure><ul><li>然后在下方设置对应评论模块的参数：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">twikoo:<br>  <span class="hljs-built_in">enable</span>: <span class="hljs-literal">true</span><br>  visitor: <span class="hljs-literal">true</span><br>  envId: yby-7glx8ltu7f9c49a0<br>  region: ap-shanghai<br>  path: window.location.pathname<br></code></pre></td></tr></table></figure><h3 id="如何管理评论"><a href="#如何管理评论" class="headerlink" title="如何管理评论"></a>如何管理评论</h3><p>根据指引下载密钥，全选复制粘贴即可</p><p><img src="7.png" alt=" "></p><p><img src="8.png" alt=" "></p><p><img src="9.png" alt=" "></p><h3 id="图片评论"><a href="#图片评论" class="headerlink" title="图片评论"></a>图片评论</h3><p>腾讯云环境自带云存储，所以腾讯云环境下可以直接上传图片，图片保存在云存储中。</p><p><a href="https://console.cloud.tencent.com/tcb/storage/index">腾讯云存储</a></p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><blockquote><p><a href="https://weilong98.com/post/Twikoo/">为 Hexo 博客添加 Twikoo 评论</a></p></blockquote><blockquote><p><a href="https://cloud.tencent.com/developer/article/2063344">Hexo 添加 Twikoo 评论插件</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>建站——从0到1全流程</title>
    <link href="/2023/02/14/%E4%BB%8E0%E5%88%B01%E5%85%A8%E6%B5%81%E7%A8%8B/"/>
    <url>/2023/02/14/%E4%BB%8E0%E5%88%B01%E5%85%A8%E6%B5%81%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h3 id="一、域名部署"><a href="#一、域名部署" class="headerlink" title="一、域名部署"></a>一、域名部署</h3><h4 id="1-生成托管地址"><a href="#1-生成托管地址" class="headerlink" title="1.生成托管地址"></a>1.生成托管地址</h4><ul><li><p>使用用户名新建一个以<code>.github.io</code>结尾的仓库（注意本仓库必须是公开仓库）</p><p><img src="1.png" alt="1"></p></li><li><p>查看生成的域名（需要后续的部署才能生成）<br><img src="2.png" alt="2"></p></li></ul><h4 id="2-连接仓库并推送代码"><a href="#2-连接仓库并推送代码" class="headerlink" title="2.连接仓库并推送代码"></a>2.连接仓库并推送代码</h4><ul><li>首次推送</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注意切换到科学上网的端口</span><br><br>git init<br><br>git remote add origin + 地址<br><br>git add .<br><br>git commit -m <span class="hljs-string">&quot;first commit&quot;</span><br><br>git push -u origin main   <span class="hljs-comment">#注意github默认是main不是master</span><br><br>hexo g -d   <span class="hljs-comment">#一键部署</span><br></code></pre></td></tr></table></figure><ul><li>之后的提交</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 注意切换到科学上网的端口</span><br><br>git fetch<br><br>git pull origin main --allow-unrelated-histories（允许提交不关联的历史代码。）<br><br>git add .<br><br>git commit -m <span class="hljs-string">&quot;提交说明&quot;</span><br><br>git push<br><br>hexo g -d   <span class="hljs-comment">#一键部署</span><br></code></pre></td></tr></table></figure><h3 id="二、hexo-搭建项目"><a href="#二、hexo-搭建项目" class="headerlink" title="二、hexo 搭建项目"></a>二、hexo 搭建项目</h3><ul><li>在指定的目录下打开 cmd</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g hexo-cli<br><br>hexo init yby2020 <span class="hljs-comment">#这里可以自定义名字</span><br><br></code></pre></td></tr></table></figure><ul><li>vscode 打开项目</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 安装依赖</span><br>yarn<br><br><span class="hljs-comment">#启动项目</span><br>hexo g<br>hexo server<br></code></pre></td></tr></table></figure><ul><li>切换 fluid 博客主题（详见官方文档：<a href="https://github.com/fluid-dev/hexo-theme-fluid">hexo-theme-fluid</a>）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">yarn add hexo-theme-fluid<br><br><span class="hljs-comment">#如下修改 Hexo 博客目录中的 _config.yml</span><br>theme: fluid  <span class="hljs-comment"># 指定主题</span><br>language: zh-CN  <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br><br>npm update --save hexo-theme-fluid <span class="hljs-comment"># 最后更新主题</span><br></code></pre></td></tr></table></figure><ul><li>自动部署配置</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash">yarn add hexo-deployer-git<br><br>修改根目录下的 _config.yml，配置 GitHub 相关信息<br>deploy:<br>  <span class="hljs-built_in">type</span>: git<br>  repo: https://github.com/YBY2020/YBY2020.github.io.git<br>  branch: main<br>  token: ***<br></code></pre></td></tr></table></figure><ul><li>github token 获取</li></ul><p><img src="4.png" alt="4"></p><h3 id="三、hexo-配置"><a href="#三、hexo-配置" class="headerlink" title="三、hexo 配置"></a>三、hexo 配置</h3><ul><li><p>官方文档：<a href="https://hexo.fluid-dev.com/docs/guide/#%E5%85%B3%E4%BA%8E%E6%8C%87%E5%8D%97">Hexo Fluid 用户手册</a></p></li><li><p>官方示例：<a href="https://hexo.fluid-dev.com/">Hexo Theme Fluid</a></p></li><li><p>仅介绍具有代表性的配置</p></li></ul><h4 id="1-mac-风格代码块"><a href="#1-mac-风格代码块" class="headerlink" title="1.mac 风格代码块"></a>1.mac 风格代码块</h4><ul><li><p>在 source 文件夹下新建<code>/source/css/fluid-extension.css</code>（此处可添加任何覆盖样式）</p><p><img src="3.png" alt="3"></p></li><li><p>打开主题的配置文件<code>_config.fluid.yml</code>，在 <code>custom_css</code> 里添加刚才的文件。</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">custom_css: <span class="hljs-string">&quot;/css/fluid-extension.css&quot;</span><br></code></pre></td></tr></table></figure><ul><li>mac 风格代码块</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/* 控制代码框顶栏颜色、宽度、圆角等 */</span><br><span class="hljs-selector-tag">figure</span><span class="hljs-selector-class">.highlight</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">246</span>, <span class="hljs-number">248</span>, <span class="hljs-number">250</span>);<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">8px</span>;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">1px</span> <span class="hljs-number">1px</span> <span class="hljs-number">4px</span> -<span class="hljs-number">1px</span> <span class="hljs-built_in">rgba</span>(<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0.3</span>);<br>  <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">25px</span>;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">998</span>;<br>&#125;<br><br><span class="hljs-comment">/* 绘制三个小圆点 */</span><br><span class="hljs-selector-tag">figure</span><span class="hljs-selector-class">.highlight</span><span class="hljs-selector-pseudo">::before</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fc625d</span>;<br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">box-shadow</span>: <span class="hljs-number">20px</span> <span class="hljs-number">0</span> <span class="hljs-number">#fdbc40</span>, <span class="hljs-number">40px</span> <span class="hljs-number">0</span> <span class="hljs-number">#35cd4b</span>;<br>  <span class="hljs-attribute">content</span>: <span class="hljs-string">&quot; &quot;</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">12px</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">12px</span>;<br>  <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">15px</span>;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">12px</span>;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">999</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="2-代码时效性提醒"><a href="#2-代码时效性提醒" class="headerlink" title="2.代码时效性提醒"></a>2.代码时效性提醒</h4><ul><li>在 source 文件夹下新建<code>/source/js/date.js</code>（js 目录下集中存放注入代码，并统一引入）</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs js">(<span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">var</span> times = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByTagName</span>(<span class="hljs-string">&quot;time&quot;</span>);<br>  <span class="hljs-keyword">if</span> (times.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  <span class="hljs-keyword">var</span> posts = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementsByClassName</span>(<span class="hljs-string">&quot;post-content&quot;</span>);<br>  <span class="hljs-keyword">if</span> (posts.<span class="hljs-property">length</span> === <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">var</span> pubTime = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(times[<span class="hljs-number">0</span>].<span class="hljs-property">dateTime</span>); <span class="hljs-comment">/* 文章发布时间戳 */</span><br>  <span class="hljs-keyword">var</span> now = <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>(); <span class="hljs-comment">/* 当前时间戳 */</span><br>  <span class="hljs-keyword">var</span> interval = <span class="hljs-built_in">parseInt</span>(now - pubTime);<br>  <span class="hljs-comment">/* 发布时间超过指定时间（毫秒）才会显示 */</span><br>  <span class="hljs-keyword">if</span> (interval &gt; <span class="hljs-number">3600</span> * <span class="hljs-number">24</span> * <span class="hljs-number">30</span> * <span class="hljs-number">1000</span>) &#123;<br>    <span class="hljs-keyword">var</span> days = <span class="hljs-built_in">parseInt</span>(interval / <span class="hljs-number">86400000</span>);<br>    posts[<span class="hljs-number">0</span>].<span class="hljs-title function_">insertAdjacentHTML</span>(<br>      <span class="hljs-string">&quot;afterbegin&quot;</span>,<br>      <span class="hljs-string">&#x27;&lt;div class=&quot;note note-warning&quot; style=&quot;font-size:0.9rem&quot;&gt;&lt;p&gt;&#x27;</span> +<br>        <span class="hljs-string">&#x27;&lt;div class=&quot;h6&quot;&gt;文章时效性提示&lt;/div&gt;&lt;p&gt;这是一篇发布于 &#x27;</span> +<br>        days +<br>        <span class="hljs-string">&quot; 天前的文章，部分信息可能已发生改变，请注意甄别。&quot;</span> +<br>        <span class="hljs-string">&quot;&lt;/p&gt;&lt;/p&gt;&lt;/div&gt;&quot;</span><br>    );<br>  &#125;<br>&#125;)();<br></code></pre></td></tr></table></figure><ul><li>在根目录下新建 scripts 文件夹，并新建一个 index.js 文件，注入 js 代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js">hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">injector</span>.<span class="hljs-title function_">register</span>(<br>  <span class="hljs-string">&quot;body_end&quot;</span>,<br>  <span class="hljs-string">`</span><br><span class="hljs-string">  &lt;script src=&quot;/js/date.js&quot;&gt;&lt;/script&gt;</span><br><span class="hljs-string">`</span><br>);<br></code></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><blockquote><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">GitHub Pages + Hexo 搭建个人博客网站，史上最全教程</a></p></blockquote>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
